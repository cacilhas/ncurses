package info.cacilhas.ncurses

object Key {

  import c_header._

  lazy val code_yes: Int  = KEY_CODE_YES
  lazy val min: Int       = KEY_MIN
  lazy val break: Int     = KEY_BREAK
  lazy val sreset: Int    = KEY_SRESET
  lazy val reset: Int     = KEY_RESET
  lazy val down: Int      = KEY_DOWN
  lazy val up: Int        = KEY_UP
  lazy val left: Int      = KEY_LEFT
  lazy val right: Int     = KEY_RIGHT
  lazy val home: Int      = KEY_HOME
  lazy val backspace: Int = KEY_BACKSPACE
  lazy val f0: Int        = KEY_F0
  lazy val f1: Int        = KEY_F1
  lazy val f2: Int        = KEY_F2
  lazy val f3: Int        = KEY_F3
  lazy val f4: Int        = KEY_F4
  lazy val f5: Int        = KEY_F5
  lazy val f6: Int        = KEY_F6
  lazy val f7: Int        = KEY_F7
  lazy val f8: Int        = KEY_F8
  lazy val f9: Int        = KEY_F9
  lazy val f10: Int       = KEY_F10
  lazy val f11: Int       = KEY_F11
  lazy val f12: Int       = KEY_F12
  lazy val f13: Int       = KEY_F13
  lazy val f14: Int       = KEY_F14
  lazy val f15: Int       = KEY_F15
  lazy val f16: Int       = KEY_F16
  lazy val f17: Int       = KEY_F17
  lazy val f18: Int       = KEY_F18
  lazy val f19: Int       = KEY_F19
  lazy val f20: Int       = KEY_F20
  lazy val dl: Int        = KEY_DL
  lazy val il: Int        = KEY_IL
  lazy val dc: Int        = KEY_DC
  lazy val ic: Int        = KEY_IC
  lazy val eic: Int       = KEY_EIC
  lazy val clear: Int     = KEY_CLEAR
  lazy val eos: Int       = KEY_EOS
  lazy val eol: Int       = KEY_EOL
  lazy val sf: Int        = KEY_SF
  lazy val sr: Int        = KEY_SR
  lazy val npage: Int     = KEY_NPAGE
  lazy val ppage: Int     = KEY_PPAGE
  lazy val stab: Int      = KEY_STAB
  lazy val ctab: Int      = KEY_CTAB
  lazy val catab: Int     = KEY_CATAB
  lazy val enter: Int     = KEY_ENTER
  lazy val print: Int     = KEY_PRINT
  lazy val ll: Int        = KEY_LL
  lazy val a1: Int        = KEY_A1
  lazy val a3: Int        = KEY_A3
  lazy val b2: Int        = KEY_B2
  lazy val c1: Int        = KEY_C1
  lazy val c3: Int        = KEY_C3
  lazy val btab: Int      = KEY_BTAB
  lazy val beg: Int       = KEY_BEG
  lazy val cancel: Int    = KEY_CANCEL
  lazy val close: Int     = KEY_CLOSE
  lazy val command: Int   = KEY_COMMAND
  lazy val copy: Int      = KEY_COPY
  lazy val create: Int    = KEY_CREATE
  lazy val end: Int       = KEY_END
  lazy val exit: Int      = KEY_EXIT
  lazy val find: Int      = KEY_FIND
  lazy val help: Int      = KEY_HELP
  lazy val mark: Int      = KEY_MARK
  lazy val message: Int   = KEY_MESSAGE
  lazy val move: Int      = KEY_MOVE
  lazy val next: Int      = KEY_NEXT
  lazy val open: Int      = KEY_OPEN
  lazy val options: Int   = KEY_OPTIONS
  lazy val previous: Int  = KEY_PREVIOUS
  lazy val redo: Int      = KEY_REDO
  lazy val reference: Int = KEY_REFERENCE
  lazy val refresh: Int   = KEY_REFRESH
  lazy val replace: Int   = KEY_REPLACE
  lazy val restart: Int   = KEY_RESTART
  lazy val resume: Int    = KEY_RESUME
  lazy val save: Int      = KEY_SAVE
  lazy val sbeg: Int      = KEY_SBEG
  lazy val scancel: Int   = KEY_SCANCEL
  lazy val scommand: Int  = KEY_SCOMMAND
  lazy val scopy: Int     = KEY_SCOPY
  lazy val screate: Int   = KEY_SCREATE
  lazy val sdc: Int       = KEY_SDC
  lazy val sdl: Int       = KEY_SDL
  lazy val select: Int    = KEY_SELECT
  lazy val send: Int      = KEY_SEND
  lazy val seol: Int      = KEY_SEOL
  lazy val sexit: Int     = KEY_SEXIT
  lazy val sfind: Int     = KEY_SFIND
  lazy val shelp: Int     = KEY_SHELP
  lazy val shome: Int     = KEY_SHOME
  lazy val sic: Int       = KEY_SIC
  lazy val sleft: Int     = KEY_SLEFT
  lazy val smessage: Int  = KEY_SMESSAGE
  lazy val smove: Int     = KEY_SMOVE
  lazy val snext: Int     = KEY_SNEXT
  lazy val soptions: Int  = KEY_SOPTIONS
  lazy val sprevious: Int = KEY_SPREVIOUS
  lazy val sprint: Int    = KEY_SPRINT
  lazy val sredo: Int     = KEY_SREDO
  lazy val sreplace: Int  = KEY_SREPLACE
  lazy val sright: Int    = KEY_SRIGHT
  lazy val srsume: Int    = KEY_SRSUME
  lazy val ssave: Int     = KEY_SSAVE
  lazy val ssuspend: Int  = KEY_SSUSPEND
  lazy val sundo: Int     = KEY_SUNDO
  lazy val suspend: Int   = KEY_SUSPEND
  lazy val undo: Int      = KEY_UNDO
  lazy val mouse: Int     = KEY_MOUSE
  lazy val resize: Int    = KEY_RESIZE
  lazy val event: Int     = KEY_EVENT
  lazy val max: Int       = KEY_MAX
}
